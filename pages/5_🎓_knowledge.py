import streamlit as st
from PIL import Image
import psycopg2
import pandas as pd
import numpy as np

st.set_page_config(page_title="–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π", page_icon="üéì", layout="wide")

# –∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –≤ –æ–±–ª–∞–∫–µ
with open('DATABASE_URL.txt', 'r') as f:
    DATABASE_URL = f.read()
# —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã
connect = psycopg2.connect(DATABASE_URL)
# —Å–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –∫—É—Ä—Å–æ—Ä–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
cursor = connect.cursor()

cursor.execute("SELECT exhauster_name FROM blm.exhausters;")
exhauster_names = cursor.fetchall()

cursor.execute("SELECT mechanism_name, signal_name, mark_name, measuring_name, \
                       exhauster_name, place, type, comment, active\
                FROM blm.mapping_signals \
                INNER JOIN blm.mechanisms USING(mechanism_id) \
                INNER JOIN blm.signals USING(signal_id) \
                INNER JOIN blm.marks USING(mark_id) \
                INNER JOIN blm.measurings USING(measuring_id) \
                INNER JOIN blm.signal_settings AS sig USING(signal_settings_id) \
                INNER JOIN blm.exhausters AS ex ON sig.exhauster =  ex.exhauster_id;")
rows = cursor.fetchall()

df = pd.DataFrame(rows, columns=[_.name for _ in cursor.description])

col1, col2 = st.columns(2)
col1.write("""<p><img src="https://www.tadviser.ru/images/f/f1/EVRAZ_Logo_2022.png" width="250" height="80" align="middle" /> </p>""", unsafe_allow_html=True)    
col2.write("""<h1> –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π </h1>""", unsafe_allow_html=True)

st.write("## –ß—Ç–æ —Ç–∞–∫–æ–µ —ç–∫—Å–≥–∞—É—Å—Ç–µ—Ä! ‚öôÔ∏è")

# –ö–æ–Ω—Ç–µ–∫—Å—Ç

st.markdown("""–ê–≥–ª–æ–º–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è –º–∞—à–∏–Ω–∞ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –¥–ª—è –æ–∫—É—Å–∫–æ–≤–∞–Ω–∏—è –∂–µ–ª–µ–∑–Ω—ã—Ö —Ä—É–¥ –∏ –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ç–æ–≤ –¥–ª—è –¥–æ–º–µ–Ω–Ω–æ–π –ø–ª–∞–≤–∫–∏ –ø—É—Ç–µ–º –∏—Ö —Å–ø–µ–∫–∞–Ω–∏—è –Ω–∞ –∞–≥–ª–æ–ª–µ–Ω—Ç–µ –ø–æ–¥ —Ä–∞–∑—Ä–µ–∂–µ–Ω–∏–µ–º —Å–æ–∑–¥–∞–≤–∞–µ–º—ã–º —ç–∫—Å–≥–∞—É—Å—Ç–µ—Ä–∞–º–∏.

–í –ø—Ä–æ–º–µ–∂—É—Ç–∫–µ –º–µ–∂–¥—É –≤–µ—Ä—Ö–Ω–∏–º–∏ –∏ –Ω–∏–∂–Ω–∏–º–∏ –Ω–∞–ø—Ä–∞–≤–ª—è—é—â–∏–º–∏ –∞–≥–ª–æ–º–∞—à–∏–Ω—ã —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω—ã –ø–∏—Ä–∞–º–∏–¥–∞–ª—å–Ω–æ–π —Ñ–æ—Ä–º—ã –≤–∞–∫—É—É–º-–∫–∞–º–µ—Ä—ã, —Å–æ–µ–¥–∏–Ω—ë–Ω–Ω—ã–µ –ø—Ä–∏ –ø–æ–º–æ—â–∏ –≥–∞–∑–æ—Ö–æ–¥–∞ —Å –¥—ã–º–æ—Å–æ—Å–æ–º (**—ç–∫—Å–≥–∞—É—Å—Ç–µ—Ä–æ–º**). –≠–∫—Å–≥–∞—É—Å—Ç–µ—Ä —Å–æ–∑–¥–∞–µ—Ç –æ–±–ª–∞—Å—Ç—å –ø–æ–Ω–∏–∂–µ–Ω–Ω–æ–≥–æ –¥–∞–≤–ª–µ–Ω–∏—è –≤ –≤–∞–∫—É—É–º-–∫–∞–º–µ—Ä–∞—Ö, –ø–æ–¥ –¥–µ–π—Å—Ç–≤–∏–µ–º –∫–æ—Ç–æ—Ä–æ–≥–æ —á–µ—Ä–µ–∑ –≤—Å—é –ø–ª–æ—â–∞–¥—å –ø–∞–ª–µ—Ç, –Ω–∞—Ö–æ–¥—è—â–∏—Ö—Å—è –Ω–∞ –≤–µ—Ä—Ö–Ω–µ–º –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–º —É—á–∞—Å—Ç–∫–µ, –≤ –∞–≥–ª–æ–º–µ—Ä–∏—Ä—É–µ–º—ã–π —Å–ª–æ–π –∑–∞—Å–∞—Å—ã–≤–∞–µ—Ç—Å—è –≤–Ω–∞—á–∞–ª–µ –≥–æ—Ä—è—á–∏–π –≥–∞–∑ (–∏–∑ –∑–∞–∂–∏–≥–∞—Ç–µ–ª—å–Ω–æ–≥–æ –≥–æ—Ä–Ω–∞), –∞ –∑–∞—Ç–µ–º –Ω–∞ –æ—Å—Ç–∞–ª—å–Ω–æ–π —á–∞—Å—Ç–∏ –º–∞—à–∏–Ω—ã ‚Äî –≤–æ–∑–¥—É—Ö . –î–∞–ª–µ–µ –≥–∞–∑ –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ –¥—ã–º–æ–≤—É—é —Ç—Ä—É–±—É –≤ –∞—Ç–º–æ—Å—Ñ–µ—Ä—É. –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –∞–≥–ª–æ–º–µ—Ä–∞—Ç –ø—Ä–æ–ø–µ–∫–∞–µ—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ –∏ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –ø—Ä–∏–≥–æ–¥–Ω—ã–º –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ –¥–æ–º–µ–Ω–Ω–æ–π –ø–µ—á–∏. –≠–∫—Å–≥–∞—É—Å—Ç–µ—Ä —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –¥–≤–∏–≥–∞—Ç–µ–ª—è, —Ä–µ–¥—É–∫—Ç–æ—Ä–∞ –∏ —Ä–æ—Ç–æ—Ä–∞.""")

st.image(Image.open('images/sinter_machine.png'), caption='–£–ø—Ä–æ—â–µ–Ω–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –∞–≥–ª–æ–º–∞—à–∏–Ω—ã')

st.video("https://www.youtube.com/watch?v=Y8iTNMh0pNE")
st.caption("<center> –ß—Ç–æ —Ç–∞–∫–æ–µ —ç–∫—Å–≥–∞—É—Å—Ç–µ—Ä –∞–≥–ª–æ–º–∞—à–∏–Ω—ã? </center>", unsafe_allow_html=True)

st.write("–ú–∞–ø–ø–∏–Ω–≥ —Å–∏–≥–Ω–∞–ª–æ–≤ —ç–∫—Å–≥–∞—É—Å—Ç–µ—Ä–æ–≤")
col1, col2, col3, col4 = st.columns(4)
exhauster_names = col1.radio("–≠–∫—Å–≥–∞—É—Å—Ç–µ—Ä", options=df['exhauster_name'].unique(), index=0)
if exhauster_names: 
    index_exhauster_names = np.where(df['exhauster_name'] == exhauster_names)
    index_filter = set(index_exhauster_names[0])
    df_plot = df.iloc[list(index_filter)]
    st.write(df_plot)

# –∑–∞–∫—Ä—ã—Ç–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö 'postgres'
connect.close()

st.markdown("<h5 style='text-align: center; color: blac;'> ¬©Ô∏è –ö–æ–º–∞–Ω–¥–∞ 40+ </h5>", unsafe_allow_html=True)
st.markdown("<h5 style='text-align: center; color: blac;'> –•–∞–∫–∞—Ç–æ–Ω –ï–í–†–ê–ó–∞ 2.0 </h5>", unsafe_allow_html=True)